% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/calc_Anticor.R
\name{calc_Anticor}
\alias{calc_Anticor}
\title{Anticor Algorithm}
\usage{
calc_Anticor(returns, w)
}
\arguments{
\item{returns}{Matrix of price relatives, i.e. the ratio of the closing
(opening) price today and the day before (use function
\code{get_price_relatives} to calculate from asset prices).}

\item{w}{window size (\code{\eqn{w \ge 2}})}
}
\value{
Object of class OLP containing
        \item{Alg}{Name of the Algorithm,}
        \item{Names}{vector of asset names in the portfolio,}
        \item{Weights}{calculated portfolio weights as a vector,}
        \item{Wealth}{wealth achieved by the portfolio as a vector,}
        \item{GrowthRate}{growth rate achieved by the portfolio as a vector,}
        \item{Return}{expected annual log-return,}
        \item{Risk}{standard deviation of log returns (annualized).}
}
\description{
computes the Anticor algorithm by Borodin et al. 2004
}
\details{
The idea of \code{Anticor} is to exploit the mean-reversion property
of asset prices. Based on two consecutive market windows of size \code{w}
wealth is transferred from asset i to asset j if the growth rate of asset i
is greater than the growth rate of asset j in the most recent window.
Additionally, the correlation between asset i in the second last window
and asset j in the last window must to be positive. The amount of wealth
transferred from asset i to j depends on the strength of correlation between
the assets and the strength of "self-anti-correlations" between each asset i.
}
\note{
The print method for \code{OLP} objects prints only a short summary.
}
\examples{
library(OLPS)
# load data
data(NYSE)
# select stocks
x <- cbind(kinar=NYSE$kinar, iroqu=NYSE$iroqu)

# calculate Universal Portfolio algorithm
Anticor <- calc_Anticor(x, w = 30)
plot(Anticor)
}
\references{
Borodin, A.; El-Yaniv, R. & Gogan, V.
Can we learn to beat the best stock,
Journal of Artificial Intelligence Research, 2004
\url{http://arxiv.org/abs/1107.0036}
}

